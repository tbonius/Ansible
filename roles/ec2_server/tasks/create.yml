---
- name: Create EC2 Instance(s)
  ec2:
    group_id: '{{ ec2_server_security_group }}'
    count: '{{ ec2_server_instcount }}'
    instance_type: '{{ ec2_server_instance_type }}'
    image: '{{ ec2_server_image }}'
    wait: true
    region: '{{ ec2_server_region }}'
    keypair: '{{ ec2_server_keypair }}'
    aws_access_key: '{{ ec2_server_access_key }}'
    aws_secret_key: '{{ ec2_server_secret_key }}'
    instance_tags:
      Name: '{{ ec2_server_name }}'
  register: ec2

- name: Instance Ids
  debug: msg={{ item.id }}
  with_items: "{{ ec2.instances }}"

- name: Wait for SSH
  wait_for:
    host: '{{ item.public_dns_name }}'
    port: 22
    delay: 60
    timeout: 320
    state: started
  with_items: "{{ ec2.instances }}"

- name: Add hosts group temporary inventory group with pem path
  add_host:
    name: '{{ item.public_dns_name }}'
    groups: '{{ ec2_server_group_name }}'
    ansible_ssh_private_key_file: '{{ ec2_server_pem_path }}'
    ansible_ssh_user: '{{ ec2_server_ansible_ssh_user }}'
  with_items: "{{ ec2.instances }}"
  when: ec2_server_pem_path != ''

- name: Add hosts group temporary inventory group without pem path
  add_host:
    name: '{{ item.public_dns_name }}'
    groups: '{{ ec2_server_group_name }}'
    ansible_ssh_user: '{{ ec2_server_ansible_ssh_user }}'
  with_items: "{{ ec2.instances }}"
  when: ec2_server_pem_path == ''

- name: Update hostname with ec2_server_name
  hostname:
    name: '{{ ec2_server_name }}'

- name: Update /etc/hosts with hostname
  lineinfile:
    dest: /etc/hosts
    regexp: "^127.0.0.1"
    line: "127.0.0.1{{'\t'}}{{ec2_server_name}} {{ec2_server_name }}.{{ec2_domain_name}} localhost localhost.localdomain"
    state: present

- name: Update /etc/resolv.conf
  lineinfile:
    dest: /etc/resolv.conf
    regexp: "^search"
    line: "search {{ec2_domain_name}}"
    state: present
